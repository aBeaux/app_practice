{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abeaux\\\\Documents\\\\Baufest\\\\Cursos\\\\my_app\\\\my_app_front\\\\src\\\\tables\\\\CarritoTable.js\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"../public/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TablaBody(props) {\n  const {\n    data\n  } = props;\n  return data.data.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Precio:$\", item.precio]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => data.handleDelete(e, item.id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 1\n      }, this)\n    }, void 0, false);\n  });\n}\n\n_c = TablaBody;\n\nfunction TablaCarrito(props) {\n  const {\n    comprar,\n    data,\n    CarritoVacio,\n    agregar,\n    pagar\n  } = props;\n  let total = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    total += data[i].precio;\n    console.log(data[i].precio);\n  } // console.log(props)\n  //dos opciones, que quede siempre el boton de agregar y que se borre el de comprar cuando esta vacio el carrito, o que se renderice un boton distinto segun este vacio o no. \n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"carrito\",\n      children: [/*#__PURE__*/_jsxDEV(CarritoVacio, {\n        id: \"carritoVacio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => comprar ? pagar() : agregar(),\n          children: props.comprar ? \"Comprar\" : \"Agregar comida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablaBody, {\n      data: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = TablaCarrito;\nexport default TablaCarrito;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablaBody\");\n$RefreshReg$(_c2, \"TablaCarrito\");","map":{"version":3,"sources":["C:/Users/abeaux/Documents/Baufest/Cursos/my_app/my_app_front/src/tables/CarritoTable.js"],"names":["Button","Card","TablaBody","props","data","map","item","index","nombre","precio","e","handleDelete","id","TablaCarrito","comprar","CarritoVacio","agregar","pagar","total","i","length","console","log"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAO,mBAAP;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AACFC,IAAAA;AADE,MAEJD,KAFF;AAQJ,SAAOC,IAAI,CAACA,IAAL,CAAUC,GAAV,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/B,wBAAO;AAAA,6BACX;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACY,QAAC,IAAD;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,mCACA;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,sCACI;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,uCAAaF,IAAI,CAACG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAGC,CAAD,IAAKN,IAAI,CAACO,YAAL,CAAkBD,CAAlB,EAAqBJ,IAAI,CAACM,EAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAAqCL,KAArC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADW,qBAAP;AAkBH,GAnBM,CAAP;AAoBK;;KA7BIL,S;;AAiCN,SAASW,YAAT,CAAsBV,KAAtB,EAA4B;AACzB,QAAM;AACDW,IAAAA,OADC;AACQV,IAAAA,IADR;AACcW,IAAAA,YADd;AAC4BC,IAAAA,OAD5B;AACoCC,IAAAA;AADpC,MAEHd,KAFH;AAIC,MAAIe,KAAK,GAAC,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACf,IAAI,CAACgB,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7BD,IAAAA,KAAK,IAAEd,IAAI,CAACe,CAAD,CAAJ,CAAQV,MAAf;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACe,CAAD,CAAJ,CAAQV,MAApB;AACH,GATuB,CAWzB;AACA;;;AAEE,sBACI;AAAA,4BACA;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACC,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,+BAAI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAIK,OAAO,GAAGG,KAAK,EAAR,GAAWD,OAAO,EAA9C;AAAA,oBAAmDb,KAAK,CAACW,OAAN,GAAe,SAAf,GAAyB;AAA5E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKC,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,4BAAYe,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBADJ;AAUH;;MAxBOL,Y;AA0BR,eAAeA,YAAf","sourcesContent":["import {Button, Card} from \"react-bootstrap\"\r\nimport \"../public/app.css\"\r\n\r\nfunction TablaBody(props){\r\n    const {\r\n        data\r\n    }=props\r\n\r\n   \r\n\r\n    \r\n\r\nreturn data.data.map((item,index)=>{\r\n    return(<>\r\n<div className=\"col-2\">\r\n            <Card>\r\n                <ul className=\"list-group\"> \r\n                <li className=\"list-group-item\" key={index} >\r\n                    <h2>{item.nombre}</h2>\r\n                    <h3>Precio:${item.precio}</h3>\r\n                    <Button onClick={(e)=>data.handleDelete(e, item.id)}>Eliminar</Button>\r\n                </li>\r\n                </ul>\r\n                \r\n            </Card>\r\n        </div>\r\n        \r\n        </>\r\n  \r\n    );\r\n\r\n})\r\n    }\r\n\r\n  \r\n   \r\n   function TablaCarrito(props){\r\n      const {\r\n           comprar, data, CarritoVacio, agregar,pagar\r\n       }=props;\r\n\r\n       let total=0;\r\n       for (var i=0; i<data.length; i++){\r\n           total+=data[i].precio\r\n           console.log(data[i].precio)\r\n       }\r\n    \r\n      // console.log(props)\r\n      //dos opciones, que quede siempre el boton de agregar y que se borre el de comprar cuando esta vacio el carrito, o que se renderice un boton distinto segun este vacio o no. \r\n      \r\n        return ( \r\n            <>\r\n            <div id=\"carrito\">\r\n             <CarritoVacio id=\"carritoVacio\"/> \r\n             <h2><Button onClick={()=>comprar ? pagar():agregar()}>{props.comprar? \"Comprar\":\"Agregar comida\"}</Button></h2>\r\n             </div>\r\n             <TablaBody data={props} />\r\n             <h3>Total: {total}</h3>\r\n            \r\n            </>)\r\n    }\r\n\r\n    export default TablaCarrito;"]},"metadata":{},"sourceType":"module"}