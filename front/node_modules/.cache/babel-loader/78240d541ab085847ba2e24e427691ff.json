{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abeaux\\\\Documents\\\\Baufest\\\\Cursos\\\\my_app\\\\my_app_front\\\\src\\\\tables\\\\CarritoTable.js\";\nimport { render } from \"react-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TablaBody(props) {\n  const {\n    data\n  } = props;\n  return data.data.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.precio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: event => data.handleDelete(event, item.id),\n            children: \" Eliminar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this);\n  });\n}\n\n_c = TablaBody;\n\nfunction TablaCarrito(props) {\n  const {\n    comprar,\n    data,\n    Boton,\n    agregar,\n    pagar\n  } = props; // console.log(props)\n  //dos opciones, que quede siempre el boton de agregar y que se borre el de comprar cuando esta vacio el carrito, o que se renderice un boton distinto segun este vacio o no. \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Boton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => comprar ? pagar : agregar,\n        children: props.comprar ? \"Comprar\" : \"Agregar comida\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablaBody, {\n      data: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = TablaCarrito;\nexport default TablaCarrito;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablaBody\");\n$RefreshReg$(_c2, \"TablaCarrito\");","map":{"version":3,"sources":["C:/Users/abeaux/Documents/Baufest/Cursos/my_app/my_app_front/src/tables/CarritoTable.js"],"names":["render","Button","TablaBody","props","data","map","item","index","nombre","precio","event","handleDelete","id","TablaCarrito","comprar","Boton","agregar","pagar"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAAQC,MAAR,QAAqB,iBAArB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AACFC,IAAAA;AADE,MAEJD,KAFF;AAIJ,SAAOC,IAAI,CAACA,IAAL,CAAUC,GAAV,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/B,wBACF;AAAA,mCAAK;AAAA,+BAEG;AAAA,kCACD;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADC,eAED;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFC,eAGD,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAGC,KAAD,IAAUN,IAAI,CAACO,YAAL,CAAkBD,KAAlB,EAAyBJ,IAAI,CAACM,EAA9B,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH,SAASL,KAAT;AAAA;AAAA;AAAA;AAAA,cAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADE;AAcH,GAfM,CAAP;AAgBK;;KArBIL,S;;AAyBN,SAASW,YAAT,CAAsBV,KAAtB,EAA4B;AACzB,QAAM;AACDW,IAAAA,OADC;AACQV,IAAAA,IADR;AACcW,IAAAA,KADd;AACqBC,IAAAA,OADrB;AAC6BC,IAAAA;AAD7B,MAEHd,KAFH,CADyB,CAKzB;AACA;;AAEE,sBACI;AAAA,4BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BAAI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIW,OAAO,GAAGG,KAAH,GAASD,OAArC;AAAA,kBAA+Cb,KAAK,CAACW,OAAN,GAAe,SAAf,GAAyB;AAAxE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADJ;AAOH;;MAfOU,Y;AAiBR,eAAeA,YAAf","sourcesContent":["import { render } from \"react-dom\";\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nfunction TablaBody(props){\r\n    const {\r\n        data\r\n    }=props\r\n\r\nreturn data.data.map((item,index)=>{\r\n    return(\r\n  <ul> <li key={index}>\r\n      \r\n          <div> \r\n         <h2>{item.nombre}</h2>\r\n         <h3>{item.precio}</h3>\r\n         <Button onClick={(event)=> data.handleDelete(event, item.id)}> Eliminar </Button>\r\n         </div>\r\n      \r\n  </li>\r\n  \r\n  </ul>\r\n  \r\n    );\r\n})\r\n    }\r\n\r\n  \r\n   \r\n   function TablaCarrito(props){\r\n      const {\r\n           comprar, data, Boton, agregar,pagar\r\n       }=props;\r\n    \r\n      // console.log(props)\r\n      //dos opciones, que quede siempre el boton de agregar y que se borre el de comprar cuando esta vacio el carrito, o que se renderice un boton distinto segun este vacio o no. \r\n      \r\n        return ( \r\n            <>\r\n            <Boton/>\r\n            <h2><Button onClick={()=>comprar ? pagar:agregar}>{props.comprar? \"Comprar\":\"Agregar comida\"}</Button></h2>\r\n            <TablaBody data={props} />\r\n            \r\n            </>)\r\n    }\r\n\r\n    export default TablaCarrito;"]},"metadata":{},"sourceType":"module"}